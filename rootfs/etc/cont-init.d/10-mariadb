#!/usr/bin/with-contenv bash

if [ "$DEBUG_MODE" = "TRUE" ] || [ "$DEBUG_MODE" = "true" ];  then
    set -x
fi

MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-"123456"}
SQL_MODE=${SQL_MODE:-"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"} 

## Update for Zabbix Monitoring
sed -i -e "s/<ROOT_PASSWORD>/$MYSQL_ROOT_PASSWORD/g" /etc/zabbix/.my.cnf
sed -i -e "s/<SQL_MODE>/$SQL_MODE/g" /etc/my.cnf

chmod 0700 /etc/zabbix/.my.cnf
chown -R zabbix /etc/zabbix

DATA_DIR="$(mysqld --verbose --help --log-bin-index=`mktemp -u` 2>/dev/null | awk '$1 == "datadir" { print $2; exit }')"

if [ ! -d "$DATA_DIR"mysql ]; then
  if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" ]; then
    echo >&2 '[i] error: database is uninitialized and password option is not specified '
    echo >&2 '[i] You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD'
    exit 1
  fi

  mkdir -p "$DATA_DIR"
  chown -R mysql:mysql "$DATA_DIR"
    
  echo "[i] Initializing database"
  mysql_install_db --user=mysql --datadir="$DATA_DIR" --rpm
  mysqld_safe --skip-networking --nowatch

  mysql_options='--protocol=socket -uroot'

  for i in `seq 30 -1 0`; do
     if mysql $mysql_options -e 'SELECT 1' &> /dev/null; then
        break
     fi
     echo "[i] MySQL init process in progress..."
     sleep 1
  done
   
  if [ "$i" = 0 ]; then
     echo >&2 "[i] MySQL init process failed."
     exit 1
  fi

  if [ -z "$MYSQL_INITDB_SKIP_TZINFO" ]; then
# apk add --update-cache tzdata
# sed is for https://bugs.mysql.com/bug.php?id=20545
    mysql_tzinfo_to_sql /usr/share/zoneinfo | sed 's/Local time zone must be set--see zic manual page/FCTY/' | mysql $mysql_options mysql
  fi

  if [ ! -z "$MYSQL_RANDOM_ROOT_PASSWORD" ]; then
    MYSQL_ROOT_PASSWORD="$(pwgen -1 16)"
    echo "[i] GENERATED ROOT PASSWORD: $MYSQL_ROOT_PASSWORD"
  fi

mysql $mysql_options << EOSQL
    -- What's done in this file shouldn't be replicated
    --  or products like mysql-fabric won't work
    SET @@SESSION.SQL_LOG_BIN=0;
    DELETE FROM mysql.user;
    CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}';
    GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION;
    DROP DATABASE IF EXISTS test;
    FLUSH PRIVILEGES;
EOSQL

  if [ ! -z "$MYSQL_ROOT_PASSWORD" ]; then
    mysql_options="$mysql_options -p${MYSQL_ROOT_PASSWORD}"
  fi

  if [ "$MYSQL_DATABASE" ]; then
    mysql $mysql_options -e "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` CHARACTER SET utf8 COLLATE utf8_general_ci;"
    mysql_options="$mysql_options $MYSQL_DATABASE"
  fi

  if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then
    mysql $mysql_options -e "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD';"

    if [ "$MYSQL_DATABASE" ]; then
      mysql $mysql_options -e "GRANT ALL ON \`$MYSQL_DATABASE\`.* TO '$MYSQL_USER'@'%';"
    fi

    mysql $mysql_options -e 'FLUSH PRIVILEGES;'
  fi

  for f in /import/*; do
    case "$f" in
    *.sh)     echo "$0: running $f"; . "$f" ;;
    *.sql)    echo "$0: running $f"; mysql $mysql_options < "$f"; echo ;;
    *.sql.gz) echo "$0: running $f"; gunzip -c "$f" | mysql $mysql_options; echo ;;
    *)        echo "$0: ignoring $f" ;;
    esac
  echo ""
  done

  if ! mysqladmin -uroot --password="$MYSQL_ROOT_PASSWORD" shutdown; then
    echo >&2 "Shutdown failed"
    exit 1
  fi

  sleep 2

  echo "[i] MySQL init process done. Ready for start up."
else
  mkdir -p /var/run/mysqld
  chown -R mysql:mysql /var/run/mysqld
fi

mkdir -p /tmp/state
touch /tmp/state/`basename $0`-init
